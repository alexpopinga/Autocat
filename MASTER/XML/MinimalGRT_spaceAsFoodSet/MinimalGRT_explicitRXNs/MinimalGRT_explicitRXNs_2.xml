<!-- Simple discrete 2D diffusion model -->

<beast version='2.0' namespace='master:master.model:master.outputs:master.steppers'>
    <run spec='Trajectory'
         simulationTime='100'
         nSamples="100">
        
        <stepper spec='GillespieStepper'/>
        <!--<stepper spec='SALStepper' stepSize="0.1" />
        <stepper spec='RateEquationStepper' stepSize="0.1" />-->

        <model spec='Model' id='model'>
        
            <!-- Genes, proteins, gene-protein complexes -->
            <populationType spec='PopulationType' typeName="Gmm" dim="3" id="Gmm"/>
            <populationType spec='PopulationType' typeName="Gnn" dim="3" id="Gnn"/>
            <populationType spec='PopulationType' typeName="Gmn" dim="3" id="Gmn"/>
            <populationType spec='PopulationType' typeName="Gnm" dim="3" id="Gnm"/>
            <populationType spec='PopulationType' typeName="Paa" dim="3" id="Paa"/>
            <populationType spec='PopulationType' typeName="Pbb" dim="3" id="Pbb"/>
            <populationType spec='PopulationType' typeName="Pab" dim="3" id="Pab"/>
            <populationType spec='PopulationType' typeName="Pba" dim="3" id="Pba"/>

	    	<!-- Nucleotides and amino acids ('food' molecules) -->
            <populationType spec='PopulationType' typeName="m" dim="3" id="m"/>
            <populationType spec='PopulationType' typeName="n" dim="3" id="n"/>
            <populationType spec='PopulationType' typeName="a" dim="3" id="a"/>
            <populationType spec='PopulationType' typeName="b" dim="3" id="b"/>
            
            <!-- Space
            <populationType spec='PopulationType' typeName="SG" dim="3" id="SG"/>
            <populationType spec='PopulationType' typeName="SP" dim="3" id="SP"/> -->

            <!-- Hamming distance between two vectors -->
            <function spec='Function' id="HD" params="x y" value="sum(abs(x-y))"/>
            
            <!-- The Poisson probability distribution, n outcomes given expectation lambdat -->
            <function spec='Function' id="dpois" params="n lambdat" value="exp(-lambdat)*lambdat^n/n!"/>
            
	    <!-- Translation enzyme lookup: i is nucleotide, a is amino acid, returns optimal protein catalyst sequence 
            <function spec='Function' id="key" params="i a">
                <![CDATA[
                  i==0 && a==0 ?  {1,0,1}
                : i==1 && a==1 ?  {0,1,0}
                : i==0 && a==1 ?  {0,0,1}
                :                 {1,1,0}
                ]]>
            </function> -->

            <!-- Replication reaction -->
            <reaction spec='Reaction' reactionName="Replication" rate="1">
                	Gmm[c] + Pab[c] + m[c] + m[c] ->  
                	Gmm[c] + Pab[c] + Gmm[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Replication1" rate="1">
                	Gnn[c] + Pab[c] + n[c] + n[c] ->  
                	Gnn[c] + Pab[c] + Gnn[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Replication2" rate="1">
                	Gmn[c] + Pab[c] + m[c] + n[c] ->  
                	Gmn[c] + Pab[c] + Gmn[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Replication3" rate="1">
                	Gnm[c] + Pab[c] + n[c] + m[c] ->  
                	Gnm[c] + Pab[c] + Gnm[c]
            </reaction>
                        
            <!-- Translation reactions -->
            <reaction spec='Reaction' reactionName="Translation" rate="1">
                	Gmm[c] + Paa[c] + Paa[c] + a[c] + a[c] ->  
                	Gmm[c] + Paa[c] + Paa[c] + Paa[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Translation1" rate="1">
                	Gnn[c] + Pbb[c] + Pbb[c] + b[c] + b[c] ->  
                	Gnn[c] + Pbb[c] + Pbb[c] + Pbb[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Translation2" rate="1">
                	Gmn[c] + Paa[c] + Pbb[c] + a[c] + b[c] ->  
                	Gmn[c] + Paa[c] + Pbb[c] + Pab[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Translation3" rate="1">
                	Gnm[c] + Pbb[c] + Paa[c] + b[c] + a[c] ->  
                	Gnm[c] + Pbb[c] + Paa[c] + Pba[c]
            </reaction>
                        
            <!-- Diffusion (migration) reactions -->


            <!-- Degradation reactions -->  
            <reaction spec='Reaction' reactionName="Death" rate="1">
                Gmm[c] -> m[c] + m[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Death1" rate="1">
                Gnn[c] -> n[c] + n[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Death2" rate="1">
                Gmn[c] -> m[c] + m[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Death3" rate="1">
                Gnm[c] -> m[c] + n[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Death4" rate="1">
                Paa[c] -> a[c] + a[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Death5" rate="1">
                Pbb[c] -> b[c] + b[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Death6" rate="1">
                Pab[c] -> a[c] + b[c]
            </reaction>
            <reaction spec='Reaction' reactionName="Death7" rate="1">
                Pba[c] -> b[c] + a[c]
            </reaction>
        </model>

        <initialState spec='InitState'>
        	
        	<!-- Nucleotides -->
            <populationSize spec='PopulationSize'>
                m[c] := 10
            </populationSize> 
            <populationSize spec='PopulationSize'>
                n[c] := 10
            </populationSize>           

			<!-- Amino acids -->
            <populationSize spec='PopulationSize'>
                a[c] := 10
            </populationSize>
            <populationSize spec='PopulationSize'>
                b[c] := 10
            </populationSize>            
                        
            <!-- Genomes -->
			<populationSize spec='PopulationSize'>
				Gmm[c] := 10
			</populationSize>
			<populationSize spec='PopulationSize'>
				Gnn[c] := 10
			</populationSize>	
			<populationSize spec='PopulationSize'>
				Gmn[c] := 10
			</populationSize>
			<populationSize spec='PopulationSize'>
				Gnm[c] := 10
			</populationSize>
	
			<!-- Proteins -->
			<populationSize spec='PopulationSize'>
				Pbb[c] := 10
			</populationSize>	
			<populationSize spec='PopulationSize'>
				Pab[c] := 10
			</populationSize>
			<populationSize spec='PopulationSize'>
				Paa[c] := 10
			</populationSize>
			<populationSize spec='PopulationSize'>
				Pba[c] := 10
			</populationSize>

        </initialState>
        
        <output spec='JsonOutput' fileName='$(filebase)_output.json'/>
    </run>
</beast>